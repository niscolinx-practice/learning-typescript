{"version":3,"sources":["User.ts","index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAC,EAAA,IAAI,EAAE,SAAP;AAAkB,EAAA,GAAG,EAAE;AAAvB,CAAT,CAAb;AAEA,IAAI,CAAC,GAAL,CAAS;AAAC,EAAA,EDCG,ECDC,EAAE,OAAP;AAAgB,EAAA,GAAG,EAAE;AAArB,CAAT;ADEI,ACDJ,OAAO,CAAC,GAAR,CAAY,IDCY,ACDR,CAAC,GDCb,ACDQ,CAAS,CDCkB,ICD3B,CAAZ;ADCuC;;AAAf,SAAA,IAAA,GAAA,IAAA;AAChB,SAAK,IAAL,GAAY;AACR,MAAA,IAAI,EAAE,SADE;AAER,MAAA,GAAG,EAAE;AAFG,KAAZ;AAIH;;;;WAED,aAAI,QAAJ,EAAoB;AAChB,aAAO,KAAK,IAAL,CAAU,QAAV,CAAP;AACH;;;WAED,aAAI,cAAJ,EAA6B;AACzB,MAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,cAAzB;AACH;;;;;;AAdL,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.77de5100.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n    name: string\n    age: number\n}\n\nexport class User {\n    constructor(private data: UserProps) {\n        this.data = {\n            name: 'Clinton',\n            age: 21,\n        }\n    }\n\n    get(propName: string): number | string {\n        return this.data[propName as keyof UserProps]\n    }\n\n    set(updateUserProp: UserProps): void {\n        Object.assign(this.data, updateUserProp)\n    }\n}\n","import { User } from \"./User\";\n\nconst user = new User({name: 'Collins', age: 52})\n\nuser.set({name: 'Hello', age: 12})\nconsole.log(user.get('age'))"]}